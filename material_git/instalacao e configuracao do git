INSTALAÇÃO

  Para a instalaçao do git em máquinas Linux o primeiro passo é abrir o terminal e como root (superusuário) utilizar o
  prompt para a instalação, esta instalação se refere as versões Linux e Windows
  
  Em distribuições baseadas no paccote .Deb (Debian, Ubuntu...)
  # sudo apt-get install git-all
  
  
  Em versões baseadas no pacote .rpm (Suse,Fedora...)
  # yum install git-all
  
  Em versões Windows pode-se baixar diretamente o arquivo no endereço eletrônico  http://git-scm.com/download/win
  
  =================================================================================================================================
  
  ATUALIZAÇÃO DO SISTEMA
  Após realizada a instalação é recomendado a atualização do sistema:
  
  # sudo apt-get update && upgrade
  
  =================================================================================================================================
  
  CONFIGURAÇÕES
  
  Para conferir se a instalação foi realizada com sucesso todos os comandos do git se inicial com a palavra git,o comando para 
  conferir é: 
  
  # git status
  $ git status
  On branch master
  Your branch is up-to-date with 'origin/master'.
  nothing to commit, working directory clean
  
  O status irá indicar a posição onde o versionamento está ('origin/master'), se está na origem ou em outro ponto do versionamento.
  e  se há algum arquivo no diretório adicionado ou não.
  
  ===============================================================================================================================
  
  Com o sistema atualizado e o git instalado o próximo passo é configurar o nome e email
  
  # git config --global user.name "Rodrigo" 
  *sem esquecer as aspas duplas no nome
  
  # git config --global user.email rodrigo@xxxxx.com
  sem aspas no email
  
  Para conferir se as opções de nome e email estão configradas corretamente:
  # git config --list
  
  Para acompanhar as mudanças realizadas o comando a seguir faz com que todas as alterações sejam mostradas
  
  $ git diff
  diff --git a/CONTRIBUTING.md b/CONTRIBUTING.md
  index 8ebb991..643e24f 100644
  --- a/CONTRIBUTING.md
  +++ b/CONTRIBUTING.md
  @@ -65,7 +65,8 @@ branch directly, things can get messy.
  Please include a nice description of your changes when you submit your PR;
  if we have to read the whole diff to figure out why you're contributing
  in the first place, you're less likely to get feedback and have your change
  -merged in.
  +merged in. Also, split your changes into comprehensive chunks if your patch is
  +longer than a dozen lines.

   If you are starting to work on a particular area, feel free to submit a PR
   that highlights your work in progress (and note in the PR title that it's
   
   As adiçoes aconteccem com +++ e as subtrações com ---
   
  ===============================================================================================================================
  
  Existem duas maneira de se trabalhar com o git, uma utilizando diretamente um repositório local e a outra com um repositório 
  remoto
  
  CRIANDO UM REPOSITORIO LOCAL
  
  O primeiro passo em estar dentro de um diretório, no Linux para entrar em um diretório é necessário utilizar o comando:
  # cd /home/user/repositorio
  
  Já dentro do repositorio é necessário realizar a criação com o comando:
  # git init
  Com isso o repositorio git será criado dentro do diretório
  
  ===============================================================================================================================
  
  CLONANDO UM REPOSITÓRIO REMOTO
  
  Para utilizar um repositório hospedado em um repositório remoto como GitHub por exemplo pode ser feito por HTTP ou por chave
  ssh. No caso de se utilizar a chave ssh é necessário utilizar o conceito de chave pública/privada. Para isto é necessario
  primeiro verificar se existem as chaves com o comando:
  
  $ cd ~/.ssh
  $ ls
  authorized_keys2  id_dsa       known_hosts
  config            id_dsa.pub
    
  O ls vai listar tudo o que esta no diretório
  
  CRIANDO UMA CHAVE SSH
  
  Para a criação da chave ssh:
  
  $ ssh-keygen
  Generating public/private rsa key pair.
  Enter file in which to save the key (/home/schacon/.ssh/id_rsa):
  Created directory '/home/schacon/.ssh'.
  Enter passphrase (empty for no passphrase):
  Enter same passphrase again:
  Your identification has been saved in /home/schacon/.ssh/id_rsa.
  Your public key has been saved in /home/schacon/.ssh/id_rsa.pub.
  The key fingerprint is:
  d0:82:24:8e:d7:f1:bb:9b:33:53:96:93:49:da:9b:e3 schacon@mylaptop.local
  
  Atenção a questão do passphrase (senha) por ser utilizada em uma identificação para se clonar o repositório
  
  Para verificar a chave utiliza-se o comando
  
  $ cat ~/.ssh/id_rsa.pub
  ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAklOUpkDHrfHY17SbrmTIpNLTGK9Tjom/BWDSU
  GPl+nafzlHDTYW7hdI4yZ5ew18JH4JW9jbhUFrviQzM7xlELEVf4h9lFX5QVkbPppSwg0cda3
  Pbv7kOdJ/MTyBlWXFCR+HAo3FXRitBqxiX1nKhXpHAZsMciLq8V6RjsNAQwdsdMFvSlVK/7XA
  t3FaoJoAsncM1Q9x5+3V0Ww68/eIFmb1zuUFljQJKprrX88XypNDvjYNby6vw/Pb0rwert/En
  mZ+AW4OZPnTPI89ZPmVMLuayrD2cE86Z/il8b+gw3r3+1nKatmIkjn2so1d01QraTlMqVSsbx
  NrRFi9wrf+M7Q== schacon@mylaptop.local

  O arquivo é a chave utilizada dontro do repositório remoto e deve ser copiada e colada para identificação, é ela a responsavel
  por reconhecer se a máquina no repositório remoto e atoriza a transferência dos arquivos de maneira correta.
  ===============================================================================================================================
  
  ADICIONANDO ARQUIVOS
  
  Para adicionar arquivos dentro do repositório é necessário utilizar o comando:
  
  # git add nomeArquivo
  
  Ou para adicionar todos os arquivos 
  
  # git add .
  Atenção ao ponto
  
  Comitar as alteraçes é colocar as alterações adicionadas dentro do repositório,é necessário adicionar as alteracoes no arquivo
   e salvar, com  o comando:
  
  # git commit
  # Please enter the commit message for your changes. Lines starting
  # with '#' will be ignored, and an empty message aborts the commit.
  # On branch master
  # Your branch is up-to-date with 'origin/master'.
  #
  # Changes to be committed:
  #	new file:   README
  #	modified:   CONTRIBUTING.md
  #
  ~
  ~
  ~
  ".git/COMMIT_EDITMSG" 9L, 283C
  
  Com as alteraçes realizadas o proximo passo é verificar se elas foram efetivadas
  
  $ git status
  On branch master
  Your branch is up-to-date with 'origin/master'.
  Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

    modified:   CONTRIBUTING.md

  no changes added to commit (use "git add" and/or "git commit -a")

  $ git commit -a -m 'added new benchmarks'
  [master 83e38c7] added new benchmarks
   1 file changed, 5 insertions(+), 0 deletions(-)
  
  REMOVENDO ARQUIVOS
  
  Para remover arquivos é necessario utilizar
  $ rm PROJECTS.md
  $ git status
  On branch master
  Your branch is up-to-date with 'origin/master'.
  Changes not staged for commit:
  (use "git add/rm <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

        deleted:    PROJECTS.md

  no changes added to commit (use "git add" and/or "git commit -a")
  
  E para efetivar as alteraçoes
  
  $ git rm PROJECTS.md
  rm 'PROJECTS.md'
  
  $ git status
  On branch master
  Your branch is up-to-date with 'origin/master'.
  Changes to be committed:
  (use "git reset HEAD <file>..." to unstage)

    deleted:    PROJECTS.md
  ================================================================================================================================
  
  GITHUB - COMING SOON
  
  O primeiro passo no github após a conta ser criada é buscar nos settings a opção de adicionar a chave ssh, isto é importante
  pois sem esta adição não é possivel clonar por ssh. A seguir para clonar o repositório é necessário utilizar o comando:
  
  # git clone (ssh do repositorio)
  
  por exemplo
  
  # git@github.com:rodrigolucianocosta/Git-Instalation.git 
  
  
